{% extends 'base-layout.html.twig' %}

{% block title %}Liste des agendas{% endblock %}
{% block header %}agendas{% endblock %}
{% block breadcrumb %}{% endblock %}
{% block stylesheets %}

</style>
{% endblock %} 

{% block body %}

<div class="row">
     <div class="card shadow-sm bg-secondary">
    <div class="card-header card-header-sm">
        <h3 class="card-title"> Agenda du ministre</h3>
         
        <div class="card-toolbar">
                <a href="{{ path('app_config_avenir_index') }}" class="btn btn-main btn-sm">
                    <i class="bi bi-list text-light"></i>
                    Liste des audience
                </a>
                &nbsp;
           
             &nbsp;
            <a href="{{ path('app_gestion_event_new') }}" class="btn btn-main btn-sm">

               <i class="bi bi-plus-square text-light"></i>
                Enregistrer un évènement
            </a>
        </div>
    </div>
   
</div>
<div class="col-12">
    
    <!--begin::Fullcalendar-->
    <div id="calendrier">

    </div>
    <!--end::Fullcalendar-->
   
</div>
</div>
{% endblock %}

{% block java %}
   <script> 
    



    const element = document.getElementById("#calendrier");

        var todayDate = moment().startOf("day");
        var YM = todayDate.format("YYYY-MM");
        var YESTERDAY = todayDate.clone().subtract(1, "day").format("YYYY-MM-DD");
        var TODAY = todayDate.format("YYYY-MM-DD");
        var TOMORROW = todayDate.clone().add(1, "day").format("YYYY-MM-DD");

        var calendarEl = document.getElementById("#calendrier");
        var calendar = new FullCalendar.Calendar(calendarEl, {
            headerToolbar: {
                left: "prev,next today",
                center: "title",
                right: "dayGridMonth,timeGridWeek,timeGridDay,listMonth"
            },

            height: 800,
            contentHeight: 780,
            aspectRatio: 3,  // see: https://fullcalendar.io/docs/aspectRatio

            nowIndicator: true,
            now: TODAY + "T09:25:00", // just for demo

            views: {
                dayGridMonth: { buttonText: "month" },
                timeGridWeek: { buttonText: "week" },
                timeGridDay: { buttonText: "day" }
            },

            initialView: "dayGridMonth",
            initialDate: TODAY,

            editable: true,
            dayMaxEvents: true, // allow "more" link when too many events
            navLinks: true,
          
            events: {{ data | raw }},

    

            eventContent: function (info) {
                var element = $(info.el);

                if (info.event.extendedProps && info.event.extendedProps.description) {
                    if (element.hasClass("fc-day-grid-event")) {
                        element.data("content", info.event.extendedProps.description);
                        element.data("placement", "top");
                        KTApp.initPopover(element);
                    } else if (element.hasClass("fc-time-grid-event")) {
                        element.find(".fc-title").append("<div class="fc - description">" + info.event.extendedProps.description + "</div>");
                    } else if (element.find(".fc-list-item-title").lenght !== 0) {
                        element.find(".fc-list-item-title").append("<div class="fc - description">" + info.event.extendedProps.description + "</div>");
                    }
                }
            }
        });

    //     calendar.render();


    //     window.onload = () => {
    //             let calendarElt = document.querySelector("#calendrier")

    //             let calendar = new FullCalendar.Calendar(calendarElt, {
    //                 initialView: 'timeGridWeek',
    //                 locale: 'fr',
    //                 timeZone: 'Europe/Paris',
    //                 headerToolbar: {
    //                     start: 'prev,next today',
    //                     center: 'title',
    //                     end: 'dayGridMonth,timeGridWeek,timeGridDay,listMonth'
    //                 },
    //                 events: {{ data | raw }},




    //         editable: true,
    //             eventResizableFromStart: true
    //     })

    //         calendar.on('eventChange', (e) => {
    //             let url = `/api/${e.event.id}/edit`
    //             let donnees = {
    //                 "title": e.event.title,
    //                 "description": e.event.extendedProps.description,
    //                 "start": e.event.start,
    //                 "end": e.event.end,

    //                 //"textColor": e.event.textColor,
    //                 "allDay": e.event.allDay
    //             }

    //             let xhr = new XMLHttpRequest

    //             xhr.open("PUT", url)
    //             xhr.send(JSON.stringify(donnees))
    //         })

    //         calendar.render()
    // }
    </script>
{% endblock %}